/* eslint-disable react-hooks/rules-of-hooks */
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/sjL1fiiSz0U
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { JSX, SVGProps, useState } from "react"
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs"
import { Card, CardHeader, CardContent, CardFooter } from "@/components/ui/card"
import { Separator } from "@/components/ui/separator"
import { Button } from "@/components/ui/button"

export function orders() {
  const currentOrders = [
    {
      id: 1,
      date: "2023-06-15",
      items: [
        { name: "T-Shirt", quantity: 2, price: 19.99 },
        { name: "Jeans", quantity: 1, price: 49.99 },
      ],
      total: 89.97,
    },
    {
      id: 2,
      date: "2023-07-01",
      items: [
        { name: "Sneakers", quantity: 1, price: 59.99 },
        { name: "Backpack", quantity: 1, price: 39.99 },
      ],
      total: 99.98,
    },
  ]
  const pastOrders = [
    {
      id: 3,
      date: "2023-05-20",
      items: [
        { name: "Dress", quantity: 1, price: 39.99 },
        { name: "Earrings", quantity: 1, price: 14.99 },
      ],
      total: 54.98,
    },
    {
      id: 4,
      date: "2023-04-10",
      items: [
        { name: "Sunglasses", quantity: 1, price: 24.99 },
        { name: "Hat", quantity: 1, price: 12.99 },
      ],
      total: 37.98,
    },
  ]
  const [activeTab, setActiveTab] = useState("current")
  return (
    <div className="w-full max-w-4xl mx-auto px-4 md:px-6 py-8">
      <header className="mb-6">
        <h1 className="text-2xl font-bold">My Orders</h1>
      </header>
      <Tabs value={activeTab} onValueChange={setActiveTab}>
        <TabsList className="mb-4">
          <TabsTrigger value="current">Current Orders</TabsTrigger>
          <TabsTrigger value="past">Past Orders</TabsTrigger>
        </TabsList>
        <TabsContent value="current">
          {currentOrders.length > 0 ? (
            <div className="grid gap-4">
              {currentOrders.map((order) => (
                <Card key={order.id}>
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <span className="font-medium">Order #{order.id}</span>
                      <span className="text-sm text-muted-foreground">{order.date}</span>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <ul className="grid gap-2">
                      {order.items.map((item, index) => (
                        <li key={index} className="flex items-center justify-between">
                          <span>{item.name}</span>
                          <span>
                            {item.quantity} x ${item.price}
                          </span>
                        </li>
                      ))}
                    </ul>
                    <Separator className="my-4" />
                    <div className="flex items-center justify-between font-medium">
                      <span>Total</span>
                      <span>${order.total.toFixed(2)}</span>
                    </div>
                  </CardContent>
                  <CardFooter>
                    <Button variant="outline" size="sm">
                      View Details
                    </Button>
                  </CardFooter>
                </Card>
              ))}
            </div>
          ) : (
            <div className="flex flex-col items-center justify-center gap-4 py-8">
              <PackageIcon className="h-12 w-12 text-muted-foreground" />
              <p className="text-lg font-medium text-muted-foreground">You have no current orders.</p>
            </div>
          )}
        </TabsContent>
        <TabsContent value="past">
          {pastOrders.length > 0 ? (
            <div className="grid gap-4">
              {pastOrders.map((order) => (
                <Card key={order.id}>
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <span className="font-medium">Order #{order.id}</span>
                      <span className="text-sm text-muted-foreground">{order.date}</span>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <ul className="grid gap-2">
                      {order.items.map((item, index) => (
                        <li key={index} className="flex items-center justify-between">
                          <span>{item.name}</span>
                          <span>
                            {item.quantity} x ${item.price}
                          </span>
                        </li>
                      ))}
                    </ul>
                    <Separator className="my-4" />
                    <div className="flex items-center justify-between font-medium">
                      <span>Total</span>
                      <span>${order.total.toFixed(2)}</span>
                    </div>
                  </CardContent>
                  <CardFooter>
                    <Button variant="outline" size="sm">
                      View Details
                    </Button>
                  </CardFooter>
                </Card>
              ))}
            </div>
          ) : (
            <div className="flex flex-col items-center justify-center gap-4 py-8">
              <PackageIcon className="h-12 w-12 text-muted-foreground" />
              <p className="text-lg font-medium text-muted-foreground">You have no past orders.</p>
            </div>
          )}
        </TabsContent>
      </Tabs>
    </div>
  )
}

function PackageIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m7.5 4.27 9 5.15" />
      <path d="M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z" />
      <path d="m3.3 7 8.7 5 8.7-5" />
      <path d="M12 22V12" />
    </svg>
  )
}
